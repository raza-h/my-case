@model AbsolCase.Models.ChangePassword
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_SPLayout.cshtml";
}

@if (TempData["response"] != null)
{
    <div class="alert-danger" id="msgalert">
        @TempData["response"].ToString()
    </div>
}
<div class="col-md-6 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Change Password</h4>
            @*<p class="card-description">
            Basic form layout
        </p>*@
            @using (Html.BeginForm("ChangePassword", "Users", FormMethod.Post, new { @class = "forms-sample" }))

            {
               
                <div class="form-group">
                    <label for="exampleInputUsername1">New Password</label>
                    @Html.PasswordFor(model => model.PasswordHash, new { @class = "form-control", placeholder = "New Password*" })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger db" })

                </div>
                <div class="form-group">
                    <label for="exampleInputUsername1">Confirm New Password</label>
                    @Html.PasswordFor(model => model.ConfirmPasswordHash, new { @class = "form-control", placeholder = "Confirm New Password*" })
                    @Html.ValidationMessageFor(model => model.ConfirmPasswordHash, "", new { @class = "text-danger db" })
                </div>
                <button type="submit" class="btn btn-primary me-2">ChangePassword</button>
            }
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    setTimeout(function () {
    $("#msgalert").hide();
    }, 3500);
}
