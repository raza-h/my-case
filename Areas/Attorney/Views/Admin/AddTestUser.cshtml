@model AbsolCase.Models.TestUser
@using AbsolCase.Models
@{
    @using Newtonsoft.Json;
    @using Microsoft.AspNetCore.Http;
    @inject IHttpContextAccessor httpContextAccessor;
    string userdto = httpContextAccessor.HttpContext.Session.GetString("userData");
    UserDto userDto = new UserDto();
    bool canAccessMessages = false;
    bool canAccessTimeLline = false;
    bool canAccessCalendar = false;
    bool canAccessReporting = false;
    bool canAccessDocuments = false;
    bool canAccessNotes = false;
    if (!string.IsNullOrEmpty(userdto))
    {
        userDto = JsonConvert.DeserializeObject<UserDto>(userdto);
        @if (userDto != null && userDto.Services != null && userDto.Services.Count > 0 && userDto.Services.Where(x => x.Name == "Unlimited Messages").FirstOrDefault() != null)
            canAccessMessages = true;
        @if (userDto != null && userDto.Services != null && userDto.Services.Count > 0 && userDto.Services.Where(x => x.Name == "Timeline").FirstOrDefault() != null)
            canAccessTimeLline = true;

        @if (userDto != null && userDto.Services != null && userDto.Services.Count > 0 && userDto.Services.Where(x => x.Name == "Calendar Events").FirstOrDefault() != null)
            canAccessCalendar = true;
        @if (userDto != null && userDto.Services != null && userDto.Services.Count > 0 && userDto.Services.Where(x => x.Name == "Reporting").FirstOrDefault() != null)
            canAccessReporting = true;
        if (userDto != null && userDto.Services != null && userDto.Services.Count > 0 && userDto.Services.Where(x => x.Name == "Documents Handling").FirstOrDefault() != null)
            canAccessDocuments = true;
        if (userDto != null && userDto.Services != null && userDto.Services.Count > 0 && userDto.Services.Where(x => x.Name == "Notes Handling").FirstOrDefault() != null)
            canAccessNotes = true;
    }
}



@{
    ViewData["Title"] = "AddTestUser";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}



@if (TempData["response"] != null)
{
    <script>
        $(document).ready(function () {

            var success = '@((TempData["response"] != null).ToString())';
            if (success == 'false' || success == false) {

            } else {
                toastr.info('@TempData["response"].ToString()');
            }
        });
    </script>
}

<div class="row mb-1">
    <div class="card col-md-12 col-lg-12 pull-right grid-margin">

        <div class="card-block mt-3 ml-5">
            <ul class="navbar dashboard-short-icon">
                <li style="display: table-cell;text-align:center; box-sizing: border-box;" @(!canAccessCalendar ? "onclick=ShowSubscriptionLimitation()" : "")>
                    <a href="@(canAccessCalendar == true ? Url.Action("ManageEvents","Admin", new { area = "Attorney"}) : "#")" style="text-decoration:none;">
                        <img src="~/images/dashboard/event.jpg" width="50" height="50" /><br />
                        Event
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;" @(!canAccessDocuments ? "onclick=ShowSubscriptionLimitation()" : "")>
                    <a href="@(canAccessDocuments == true ?  Url.Action("ManageDocuments","Admin", new { area = "Attorney"}) : "#")" style="text-decoration:none;">
                        <img src="~/images/dashboard/document-removebg.png" width="50" height="50" /><br />
                        Document
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;">
                    <a href="@Url.Action("ManageTask", "Admin", new { area = "Attorney" })" style="text-decoration:none;">
                        <img src="~/images/dashboard/task.png" width="50" height="50" /><br />
                        Task
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;">
                    <a href="@Url.Action("AddPotentialClient", "Admin", new { area = "Attorney" })" style="text-decoration:none;">
                        <img src="~/images/dashboard/lead-removebg.png" width="50" height="50" /><br />

                        Lead
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;">
                    <a href="@Url.Action("AddContact", "Admin", new { area = "Attorney" })" style="text-decoration:none;" id="contactmodal">
                        <img src="~/images/dashboard/contact-removebg.png" width="50" height="50" /><br />
                        Contact
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;">
                    <a href="@Url.Action("ManageCases", "Admin", new { area = "Attorney" })" style="text-decoration:none;" onclick="abc();">
                        <img src="~/images/dashboard/briefcase-removebg.png" width="50" height="50" /><br />
                        Case
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;" @(!canAccessMessages ? "onclick=ShowSubscriptionLimitation()" : "")>
                    <a href="@(canAccessMessages == true ? Url.Action("Message","Admin", new { area = "Attorney"}) : "#")" style="text-decoration:none;">
                        <img src="~/images/dashboard/message.png" width="50" height="50" /><br />
                        Message
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box; ">
                    <a href="@Url.Action("AddExpense", "Admin", new { area = "Attorney" })" style="text-decoration:none;">
                        <img src="~/images/dashboard/expenses.png" width="50" height="50" /><br />
                        Expense
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;">
                    <a href="@Url.Action("AddReceipt", "Admin", new { area = "Attorney" })" style="text-decoration:none;">
                        <img src="~/images/dashboard/invoice.jpg" width="50" height="50" /><br />
                        Invoice
                    </a>
                </li>
                <li style="display: table-cell;text-align:center; box-sizing: border-box;" @(!canAccessNotes ? "onclick=ShowSubscriptionLimitation()" : "")>
                    <a href="@(canAccessNotes == true ? Url.Action("ManageNotes","Admin", new { area = "Attorney"}) : "#")" style="text-decoration:none;">
                        <img src="~/images/dashboard/notes.png" width="50" height="50" /><br />
                        Notes
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 grid-margin stretch-card mt-3 ms-3">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Add User By Form</h4>

                @using (Html.BeginForm("AddTestUser", "Admin", FormMethod.Post, new { @class = "forms-sample" }))
                {
                    <div class="form-group">
                        <label for="exampleInputUsername1">First Name</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">Last Name</label>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">Email</label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">Address</label>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">Phone #</label>
                        @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone #" } })
                        @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">City</label>
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger db" })

                    </div>
                    <input type="submit" value="Create" class="btn btn-dark fr" />
                    @*<button class="btn btn-light">Cancel</button>*@
                }
            </div>
        </div>
    </div>

    <div class="col-lg-6 grid-margin stretch-card mt-3 ms-3">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Add User By Ajax</h4>
                
                    <div class="form-group">
                        <label for="exampleInputUsername1">First Name</label>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control",@id="firstName", placeholder = "First Name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">Last Name</label>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control",@id="lastName", placeholder = "Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger db" })

                    </div>
                <div class="form-group">
                    <label for="exampleInputUsername1">Email</label>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control",@id="email", placeholder = "Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger db" })

                </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">Address</label>
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control",@id="address", placeholder = "Address" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">Phone #</label>
                    @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control",@id="cellphone", placeholder = "Phone #" } })
                        @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group">
                        <label for="exampleInputUsername1">City</label>
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control",@id="city", placeholder = "City" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger db" })

                    </div>
                    <input onclick="addUser()" value="AddUser" class="btn btn-dark fr" />
                    
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        var remoteServerURl = "";
        var plan = null;
        var token = "";
        $(function () {
            getRemoteServerURl();
            token = localStorage.getItem('token');
        });
        function getRemoteServerURl() {
            //$.ajax({
            //type: 'GET',
            //url: '/common/getConfigurationValue',
            //data: { sectionName: "app", paramName: "remoteServerUrl" }
            //}).done(function (response) {
            //    remoteServerURl = response.parameter;
            //    getDecumentsTag();

            //    getCases();


            //})

            var ReceivedURL = GetURL();
            remoteServerURl = ReceivedURL;
        };


        function addUser() {

            var FName = $("#firstName").val();
            var LName = $("#lastName").val();
            var Email=$("#email").val();
            var Address=$("#address").val();
            var City = $("#city").val();
            var PhoneNo=$("#cellphone").val();

            var user = {
                FirstName: FName,
                LastName: LName,
                CellPhone: PhoneNo,
                Address: Address,
                City: City,
                Email: Email,
            };
            token = localStorage.getItem('token');
            $.ajax({
                url: `${remoteServerURl}api/UserManagement/RegisterTestUser`,
                headers: { "Authorization": 'Bearer ' + token },
                type: "POST",
                data: JSON.stringify(user),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    toastr.success("User added Successfully");
                    setTimeout(function () {
                        window.location.reload();
                    }, 500);
                },
                error: function (response) {
                    toastr.error("Something Went Wrong");
                }
            });

        }

        setTimeout(function () {
            $("#msgalert").hide();
        }, 3500);
    </script>
}

