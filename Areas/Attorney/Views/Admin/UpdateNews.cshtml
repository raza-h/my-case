
@model AbsolCase.Models.News
@{
    ViewData["Title"] = "UpdateNews";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}




@if (TempData["response"] != null)
{
    <div class="alert-danger" id="msgalert">
        @TempData["response"].ToString()
    </div>
}




<div class="col-lg-12 grid-margin stretch-card mt-3 ms-3 me-4 pe-4">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Add News</h4>
            @*<p class="card-description">
                    Basic form layout
                </p>*@
            @using (Html.BeginForm("UpdateNews", "AttorneyNews", FormMethod.Post, new { area = "Attorney", @class = "forms-sample" }))
            {
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.NewsType)
                @Html.HiddenFor(model => model.SendTo)
                @Html.HiddenFor(model => model.CreatedBy)
                @Html.HiddenFor(model => model.CreatedDate)
                @Html.HiddenFor(model => model.UpdatedBy)
                @Html.HiddenFor(model => model.Time)
                @Html.HiddenFor(model => model.status)

                <div class="form-group">
                    <label for="exampleInputUsername1">Tittle</label>
                    @Html.EditorFor(model => model.NewsTittle, new { htmlAttributes = new { @class = "form-control", placeholder = "Tittle" } })
                    @Html.ValidationMessageFor(model => model.NewsTittle, "", new { @class = "text-danger db" })

                </div>
                <div class="form-group">
                    <label for="exampleInputUsername1">Description</label>

                    @Html.TextAreaFor(model => model.NewsDescription, new { @class = "form-control", @style = "height:100px" })
                    @Html.ValidationMessageFor(model => model.NewsTittle, "", new { @class = "text-danger db" })

                </div>
                <div class="row">
                    <div class="form-group col-md-6 col-sm-6">
                        <label for="exampleInputUsername1">publish Date</label>
                        @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Publish Date", type = "date" } })
                        @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group col-md-6 col-sm-6">
                        <label for="exampleInputUsername1">Expire Date</label>
                        @Html.EditorFor(model => model.ExpireDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Expire Date", type = "date" } })
                        @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger db" })

                    </div>
                </div>


                <input type="submit" value="Update" class="btn btn-info fr" />
                @*<button class="btn btn-light">Cancel</button>*@
            }
        </div>
    </div>
</div>
@section scripts {
    <script>
        setTimeout(function () {
            $("#msgalert").hide();
        }, 3500);
    </script>
    <script>
        $(function () {
            var dtToday = new Date();

            var month = dtToday.getMonth() + 1;
            var day = dtToday.getDate();
            var year = dtToday.getFullYear();
            if (month < 10)
                month = '0' + month.toString();
            if (day < 10)
                day = '0' + day.toString();

            var maxDate = year + '-' + month + '-' + day;
            if ($('#PublishDate').val() == maxDate) {

                $('#ExpireDate').attr('min', maxDate);
            }
        });
        $('#PublishDate').on('input', function () {
            debugger
            var dtToday = new Date();

            var month = dtToday.getMonth() + 1;
            var day = dtToday.getDate();
            var year = dtToday.getFullYear();
            if (month < 10)
                month = '0' + month.toString();
            if (day < 10)
                day = '0' + day.toString();

            var maxDate = year + '-' + month + '-' + day;
            if ($('#PublishDate').val() < maxDate) {
                $('#PublishDate').attr('min', maxDate);
                $('#PublishDate').val(maxDate);
            }
            var expireday = $('#ExpireDate').val();
            var publishday = $('#PublishDate').val();
            if (expireday < publishday) {
                $('#ExpireDate').val(publishday);
                $('#ExpireDate').attr('min', publishday);
            }
            else {
                $('#ExpireDate').val(maxDate);
            }
        });
        $('#ExpireDate').on('input', function () {
            var expireday = $('#ExpireDate').val();
            var publishday = $('#PublishDate').val();
            if (expireday < publishday) {
                $('#ExpireDate').val(publishday);
                $('#ExpireDate').attr('min', publishday);
            }
            else {
                var dtToday = new Date();

                var month = dtToday.getMonth() + 1;
                var day = dtToday.getDate();
                var year = dtToday.getFullYear();
                if (month < 10)
                    month = '0' + month.toString();
                if (day < 10)
                    day = '0' + day.toString();

                var maxDate = year + '-' + month + '-' + day;
                $('#ExpireDate').attr('min', maxDate);
            }
        });
</script>
}


