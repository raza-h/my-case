@using AbsolCase.Models
@model Tasks
@{
    ViewData["Title"] = "UpdateWorkflowTask";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@if (TempData["response"] != null)
{
    <div class="alert-danger" id="msgalert">
        @TempData["response"].ToString()
    </div>
}
<link href="~/assets/css/style.css" rel="stylesheet" />

<div class="col-lg-12 grid-margin stretch-card mt-3 ms-3 me-4 pe-4">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title text-center">Update Task Details</h4>
            <input type="hidden" id="update-taskid" value="@Model.Id" />
            <input type="hidden" id="update-taskfirmid" value="@Model.FirmId" />
            <input type="hidden" id="update-taskworkflowid" value="@Model.WorkflowId" />
            
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="TaskName">Task Name</label>
                    <input type="text" class="form-control" id="taskname" name="Name" value="@Model.Name" />
                    <span class="text-danger" id="taskname-validation" style="display:none">Please enter task name</span>
                </div>
                <div class="form-group col-md-6">
                    <label for="exampleInputUsername1">Due Date</label>
                    @Html.TextBoxFor(expression: model => model.DueDate, format: "{0:yyyy-MM-dd}", htmlAttributes: new { placeholder = "dd.MM.yyyy", @class = "form-control form-control-sm", type = "date", @id = "duedate" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label>Status</label>
                    <select class="form-control" id="status" aria-label="status" name="status">
                        <option value="1" @(Model.Status == AbsolCase.Models.TaskStatus.Active ? "selected" : "")>Active</option>
                        <option value="2" @(Model.Status == AbsolCase.Models.TaskStatus.InProgress ? "selected" : "")>In Progress</option>
                        <option value="3" @(Model.Status == AbsolCase.Models.TaskStatus.Completed ? "selected" : "")>Completed</option>
                        <option value="4" @(Model.Status == AbsolCase.Models.TaskStatus.OnHold ? "selected" : "")>OnHold</option>
                        <option value="5" @(Model.Status == AbsolCase.Models.TaskStatus.Dismissed ? "selected" : "")>Dismissed</option>
                        <option value="6" @(Model.Status == AbsolCase.Models.TaskStatus.Closed ? "selected" : "")>Closed</option>
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label>Priority</label>
                    <select class="form-control" id="priority" aria-label="Priority" name="Priority">
                        <option value="NoPriority" @(Model.Priority == AbsolCase.Models.Priority.NoPriority ? "selected" : "")>No Priority</option>
                        <option value="Low" @(Model.Priority == AbsolCase.Models.Priority.Low ? "selected" : "")>Low</option>
                        <option value="Medium" @(Model.Priority == AbsolCase.Models.Priority.Medium ? "selected" : "")>Medium</option>
                        <option value="High" @(Model.Priority == AbsolCase.Models.Priority.High ? "selected" : "")>High</option>
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="exampleInputUsername1">Description</label>
                    <input type="text" class="form-control" name="Description" id="description" value="@Model.Description" />
                </div>
            </div>
            <button class="btn btn-dark fr" onclick="UpdateTask('form')">Update Task</button>
        </div>
    </div>
</div>


@section scripts {
    <script>
        setTimeout(function () {
            $("#msgalert").hide();
        }, 3500);


        var remoteServerURl = "";
        var parentId = "";
        var token = "";
        $(function () {
            
            $("#taskname").on("input", function () {
                if ($("#taskname").val() == "") {
                    $("#taskname-validation").show();
                }
                else {
                    $("#taskname-validation").hide();
                }
            });
            getRemoteServerURl();
            parentId = $("#current-userid").val();
            token = localStorage.getItem('token');
        });

        function getRemoteServerURl() {

            var ReceivedURL = GetURL();
            remoteServerURl = ReceivedURL;
            
            
        }

        function UpdateTask(fromPage) {
            if (fromPage == "form") {
                var isFormValid = true;
                var ClientId = "";
                var StaffId = "";
                
                if ($("#taskname").val() == "") {
                    isFormValid = false;
                    $("#taskname-validation").show();
                }
                else {
                    $("#taskname-validation").hide();
                }
                if (!isFormValid) {
                    $('html, body').animate({ scrollTop: 0 }, 100);
                    return;
                }
                openpopup('', 'Are you sure to Update task?', "UpdateTask('frompopup')");
            }
            else {
                var task = {
                    Id: $("#update-taskid").val(),
                    FirmId: $("#update-taskfirmid").val(),
                    WorkflowId: $("#update-taskworkflowid").val(),
                    Name: $("#taskname").val(),
                    DueDate: $("#duedate").val(),
                    Status: $("#status").val(),
                    Priority: $("#priority").val(),
                    Description: $("#description").val(),
                };
                console.log(task);
                token = localStorage.getItem('token');
                var workflowID = $("#update-taskworkflowid").val();
                $.ajax({
                    url: `${remoteServerURl}api/Workflow/UpdateWorkflowTask`,
                    headers: { "Authorization": 'Bearer ' + token },
                    type: "POST",
                    data: JSON.stringify(task),
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        closepopup();
                        toastr.success(response);
                        setTimeout(function () {
                            window.location.href = '@Url.Action("Detail", "WorkflowBase")' + '/' + workflowID;
                        }, 1000);
                    },
                    error: function (response) {
                        toastr.error(response.responseText);
                    }
                });
            }
        }
    </script>
 }