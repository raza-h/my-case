@model AbsolCase.Models.SignUp
@{
    ViewBag.Title = "AddRole";

}


@if (TempData["response"] != null)
{
    <div class="alert-danger" id="msgalert">
        @TempData["response"].ToString()
    </div>
}
<!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>ABC Discounts</title>
<!-- plugins:css -->
<link rel="stylesheet" href="../../vendors/feather/feather.css">
<link rel="stylesheet" href="../../vendors/mdi/css/materialdesignicons.min.css">
<link rel="stylesheet" href="../../vendors/ti-icons/css/themify-icons.css">
<link rel="stylesheet" href="../../vendors/typicons/typicons.css">
<link rel="stylesheet" href="../../vendors/simple-line-icons/css/simple-line-icons.css">
<link rel="stylesheet" href="../../vendors/css/vendor.bundle.base.css">
<!-- endinject -->
<!-- Plugin css for this page -->
<!-- End plugin css for this page -->
<!-- inject:css -->
<link rel="stylesheet" href="../../css/vertical-layout-light/style.css">
<!-- endinject -->
<link rel=" shortcut icon" href="~/images/favicon.png" />
<div class="col-md-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title text-center">Register YourSelf</h4>
            @*<p class="card-description">
                    Basic form layout
                </p>*@
            @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "forms-sample" }))
            {

                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="exampleInputUsername1">Full Name</label>
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Full Name" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group col-md-6">
                        <label for="exampleInputUsername1">Email</label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger db" })

                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="exampleInputUsername1">Set Password</label>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Set Password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group col-md-6">
                        <label for="exampleInputUsername1">Confirm Password</label>
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger db" })

                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="exampleInputUsername1">UserType Id</label>
                        @Html.EditorFor(model => model.UserTypeId, new { htmlAttributes = new { @class = "form-control", placeholder = "User Id" } })
                        @Html.ValidationMessageFor(model => model.UserTypeId, "", new { @class = "text-danger db" })

                    </div>
                    <div class="form-group col-md-6">
                        <label for="exampleInputUsername1">UserType</label>
                        @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control", placeholder = "UserType" } })
                        @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger db" })

                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="exampleInputUsername1">UserTitle</label>
                        @Html.EditorFor(model => model.UserTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "UserTitle" } })
                        @Html.ValidationMessageFor(model => model.UserTitle, "", new { @class = "text-danger db" })

                    </div>

                </div>




                <input type="submit" value="Register" class="btn btn-dark fr" />
                @*<button class="btn btn-light">Cancel</button>*@
            }
        </div>
    </div>
</div>
<script>
    setTimeout(function () {
        $("#msgalert").hide();
    }, 3500);
</script>